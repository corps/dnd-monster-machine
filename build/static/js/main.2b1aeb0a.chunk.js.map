{"version":3,"sources":["use_cell.tsx","autoform.tsx","types.tsx","parser.ts","editing.ts","App.tsx","index.tsx"],"names":["useCell","useState","cell","setCell","useCallback","v","noop","bindAuto","Input","d","p","default","translate","toB","fromB","onChange","defaultA","useMemo","doMap","i","wrapAuto","value","setValue","innerOnChange","AutoString","className","e","target","AutoNumber","type","step","parseInt","checked","autoOption","options","map","o","selected","pushDefault","useEffect","lift","labeled","label","useTap","input","setV","bound","f","apply","F","P","lastF","setLastF","lastP","setLastP","bind","Param","setI","Op","OpComponent","apply2","p2","autoOrder","t","result","length","available","filter","includes","n","defaultCombatRole","acMod","stMod","hpMult","attack","dcMod","dmgMult","speed","perceptionProfMod","stealthProfMod","initProfMod","defaultCombatRank","attackMod","xpMult","defaultEditMonster","CombatLevel","CombatRank","CombatRole","Abilities","flags","WinCondition","CounterMeasure","defaultMonster","Source","_editing","Type","Challenge","HP","Value","Notes","AC","InitiativeModifier","InitiativeAdvantage","Speed","DamageVulnerabilities","DamageResistances","DamageImmunities","ConditionImmunities","Saves","Skills","Senses","Languages","Traits","Actions","BonusActions","Reactions","LegendaryActions","MythicActions","Version","Player","ImageUrl","defaultRankLevel","ac","hp","dcs","damage","prof","st","ab","Parser","this","message","orig","state","Error","others","all","errors","push","join","other","state_","pred","next","r","match","slice","index","source","s","JSON","stringify","ApplicativeParser","_","ApplicativeParser2","ApplicativeParser3","ApplicativeParser4","ApplicativeParser5","ApplicativeParser6","state__","ObjectBuildingParser","parser","andThen","TupleBuildingParser","matchWhitespace","nextMatching","matchNumber","parseFloat","emptyObject","emptyTuple","ranks","Minion","Grunt","Elite","Paragon","roles","Controller","Defender","Lurker","Scout","Striker","Supporter","conditionImmunitiesByFlag","celestial","hardened","intangible","animated","undead","fey","wriggler","swarm","toxic","vulnerabilitiesByFlag","resistancesByFlag","immunitiesByFlag","headNumber","terminatedBy","rankLevelParser","withKey","plus","proceededBy","rankLevels","split","line","run","expandToRankLevel","combatLevel","combatRank","combatRole","combatLevelToGruntPower","dc1","dc2","st1","st2","st3","Math","floor","abAsAbMod","expandEdit","editMonster","forEach","ability","nextVal","Name","Modifier","k","flat","Content","sides","dice","mod","mult","toString","rollToString","toRoll","Dex","Wis","App","inputs","objectFrom","passThrough","Object","keys","rank","find","role","changeBy","multiple","EditMonster","monster","baseData","Init","Per","Skls","ST","Imm","Set","values","Res","Vuln","rows","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2b1aeb0a.chunk.js","sourcesContent":["import {useCallback, useState} from \"react\";\n\nexport type Cell<T> = null | [T]\nexport function useCell<T>(): [Cell<T>, (t: T) => void] {\n  const [cell, setCell] = useState(null as null | [T]);\n  const setV = useCallback((v: T) => setCell([v]), [setCell]);\n  return [cell, setV];\n}\n\nexport function bimap<T, R>(\n  cell: Cell<T>,\n  f: (t: T) => R,\n  d: () => R\n): R {\n  if(cell) {\n    return f(cell[0]);\n  }\n\n  return d();\n}","import React, {ChangeEvent, useCallback, useEffect, useMemo, useState} from \"react\";\nimport {useCell} from \"./use_cell\";\n\nexport type BoundAutoInputParams<T> = { onChange: (t: T) => void }\nexport type AutoInputParams<T> = BoundAutoInputParams<T> & { default: T }\nexport type AutoInput<T> = (params: AutoInputParams<T>) => React.ReactElement | null;\nexport type BoundAutoInput<T> = (params: BoundAutoInputParams<T>) => React.ReactElement | null;\nexport type AutoWrappableInputParams<T> = { onChange: (t: T) => void, value: T };\n\nexport const never: AutoInput<any> = () => <></>;\n\nexport const noop: () => void = () => null;\n\nexport function bindAuto<T>(Input: AutoInput<T>, d: T): BoundAutoInput<T> {\n\tfunction Bound(p: BoundAutoInputParams<T>) {\n\t\treturn <Input {...p} default={d}/>\n\t}\n\n\treturn Bound;\n}\n\nexport function translate<A, B>(Input: AutoInput<A>, toB: (a: A) => B, fromB: (b: B) => A): AutoInput<B> {\n\treturn ({onChange, default: d}) => {\n\t\tconst defaultA = useMemo(() => fromB(d), [d]);\n\t\tconst doMap = useCallback((i: A) => {\n\t\t\tonChange(toB(i));\n\t\t}, [toB, onChange]);\n\n\t\treturn <Input onChange={doMap} default={defaultA}/>\n\t};\n}\n\n\nexport function wrapAuto<T>(Input: (p: AutoWrappableInputParams<T>) => React.ReactElement | null): AutoInput<T> {\n\treturn ({onChange, default: d}) => {\n\t\tconst [value, setValue] = useState(d);\n\n\t\tconst innerOnChange = useCallback((v: T) => {\n\t\t\tsetValue(v);\n\t\t\tonChange(v);\n\t\t}, [onChange]);\n\n\t\treturn <Input value={value} onChange={innerOnChange}/>\n\t}\n}\n\nfunction NumberInput({value, onChange}: AutoWrappableInputParams<number>) {\n\treturn <input type=\"number\" step=\"1\" value={value}\n\t\t\t\t  className=\"input-reset ba b--black-20 pa2 mb2 db w-100\"\n\t\t\t\t  onChange={(e) => {onChange(parseInt(e.target.value, 10))}} />;\n}\n\nfunction StringInput({value, onChange}: AutoWrappableInputParams<string>) {\n\treturn <input value={value}\n\t\t\t\t  className=\"input-reset ba b--black-20 pa2 mb2 db w-100\"\n\t\t\t\t  onChange={(e) => {onChange(e.target.value)}} />;\n}\n\nfunction BoolInput({value, onChange}: AutoWrappableInputParams<boolean>) {\n\treturn <input checked={value} onChange={(e) => {onChange(e.target.checked)}} />\n}\n\n\nexport const AutoString = wrapAuto(StringInput);\nexport const AutoNumber = wrapAuto(NumberInput);\nexport const AutoBool = wrapAuto(BoolInput);\n\nexport function autoOption(options: string[]): AutoInput<string> {\n\tfunction AutoOption({onChange, value}: AutoWrappableInputParams<string>): React.ReactElement | null {\n\t\treturn <select\n\t\t\tclassName=\"input-reset ba b--black-20 pa2 mb2 db w-100\"\n\t\t\tonChange={(e) => onChange(e.target.value)}>\n\t\t\t{options.map((o, i) => <option key={i} value={o} selected={o === value}>{o}</option> )}\n\t\t</select>\n\t}\n\n\treturn wrapAuto(AutoOption);\n}\n\nexport function pushDefault<T>(Input: AutoInput<T>): AutoInput<T> {\n\tfunction PushDefault(p: AutoInputParams<T>) {\n\t\tconst {onChange, default: d} = p;\n\t\tuseEffect(() => {\n\t\t\tonChange(d);\n\t\t}, []);\n\n\t\treturn <Input {...p}/>;\n\t}\n\n\treturn PushDefault;\n}\n\nexport function lift<V>(v: V): BoundAutoInput<V> {\n\treturn (({onChange}) => {\n\t\tuseEffect(() => {\n\t\t\tonChange(v);\n\t\t}, [v]);\n\n\t\treturn <></>;\n\t});\n}\n\n\nexport function map<I, O>(Input: BoundAutoInput<I>, f: (i: I) => O): BoundAutoInput<O> {\n\treturn (({onChange}) => {\n\t\tconst doMap = useCallback((i: I) => {\n\t\t\tonChange(f(i));\n\t\t}, [f, onChange]);\n\n\t\treturn <Input onChange={doMap}/>\n\t});\n}\n\nexport function tap<I>(Input: BoundAutoInput<I>, f: (i: I) => void): BoundAutoInput<I> {\n\treturn (({onChange}) => {\n\t\tconst doMap = useCallback((i: I) => {\n\t\t\tf(i);\n\t\t\tonChange(i);\n\t\t}, [f, onChange]);\n\n\t\treturn <Input onChange={doMap}/>\n\t});\n}\n\nexport function labeled<T>(label: string, Input: AutoInput<T>): AutoInput<T> {\n\treturn (p => {\n\t\treturn <div className=\"flex items-center mb2\">\n\t\t\t<label className=\"lh-copy mr2 mb2\">{label}: </label>\n\t\t\t<Input {...p}/>\n\t\t</div>;\n\t});\n}\n\nexport function useTap<O>(input: AutoInput<O>, d: O): [BoundAutoInput<O>, O] {\n\tconst [v, setV] = useState(d);\n\tconst bound = useMemo(() => tap(bindAuto(input, d), (v: O) => setV(() => v)), [input, d])\n\treturn [bound, v];\n}\n\nexport function apply<I, O>(F: BoundAutoInput<(i: I) => O>, P: BoundAutoInput<I>): BoundAutoInput<O> {\n\treturn (({onChange}) => {\n\t\tconst [lastF, setLastF] = useCell<(i: I) => O>();\n\t\tconst [lastP, setLastP] = useCell<I>();\n\n\t\tuseEffect(() => {\n\t\t\tif (lastF && lastP) {\n\t\t\t\tonChange(lastF[0](lastP[0]));\n\t\t\t}\n\t\t}, [lastF, lastP]);\n\n\t\treturn <>\n\t\t\t<F key=\"f\" onChange={setLastF}/>\n\t\t\t<P key=\"p\" onChange={setLastP}/>\n\t\t</>\n\t});\n}\n\nexport function bind<I, O>(Param: BoundAutoInput<I>, f: (i: I) => BoundAutoInput<O>): BoundAutoInput<O> {\n\treturn (({onChange}) => {\n\t\tconst [i, setI] = useCell<I>()\n\t\tconst Op = useMemo(() => i ? f(i[0]) : null, [i]);\n\t\tconst OpComponent = useCallback(({ onChange }) => Op ?\n\t\t\t<Op onChange={onChange}/> : null, [Op]);\n\n\t\treturn <>\n\t\t\t<Param onChange={setI}/>\n\t\t\t<OpComponent onChange={onChange}/>\n\t\t</>;\n\t});\n}\n\n\nexport function apply2<I, I2, O>(Input: BoundAutoInput<(i: I) => (i: I2) => O>,\n\tp: BoundAutoInput<I>,\n\tp2: BoundAutoInput<I2>\n): BoundAutoInput<O> {\n\treturn apply(apply(Input, p), p2);\n}\n\nexport function apply3<I, I2, I3, O>(Input: BoundAutoInput<(i: I) => (i: I2) => (i: I3) => O>,\n\tp: BoundAutoInput<I>,\n\tp2: BoundAutoInput<I2>,\n\tp3: BoundAutoInput<I3>\n): BoundAutoInput<O> {\n\treturn apply(apply(apply(Input, p), p2), p3);\n}\n\nexport function apply4<I, I2, I3, I4, O>(Input: BoundAutoInput<(i: I) => (i: I2) => (i: I3) => (i: I4) => O>,\n\tp: BoundAutoInput<I>,\n\tp2: BoundAutoInput<I2>,\n\tp3: BoundAutoInput<I3>,\n\tp4: BoundAutoInput<I4>\n): BoundAutoInput<O> {\n\treturn apply(apply(apply(apply(Input, p), p2), p3), p4);\n}\n\nexport function concat<T extends any[], V>(A: BoundAutoInput<T>, B: BoundAutoInput<V>): BoundAutoInput<[...T, V]> {\n\treturn apply2(lift(a => b => [...a, b]), A, B)\n}\n\ntype UnwrapAuto<T extends AutoInput<any>> = T extends AutoInput<infer V> ? V : unknown;\n\ntype AutoRecord<Inputs extends Record<string, AutoInput<any>>> = {\n\t[A in keyof Inputs]: UnwrapAuto<Inputs[A]>\n}\n\ntype RecordOfAutos<R extends Record<string, any>> = {\n\t[A in keyof R]: AutoInput<R[A]>\n}\n\nexport function objectFrom<Inputs extends Record<string, AutoInput<any>>>(\n\td: AutoRecord<Inputs>,\n\tinputs: Inputs\n): BoundAutoInput<AutoRecord<Inputs>> {\n\tlet result = lift(d);\n\n\tfor (let k in inputs) {\n\t\tresult = apply2(lift(o => (v: any) => ({...o, [k]: v})), result, bindAuto(pushDefault(inputs[k] as any), d[k]));\n\t}\n\n\treturn result;\n}\n\nexport function passThrough<D extends Record<string, any>>(\n\td: D,\n): RecordOfAutos<D> {\n\tconst result: any = {};\n\tfor (let k in d) {\n\t\tresult[k] = lift(d);\n\t}\n\n\treturn result;\n}\n\nexport function autoOrder<T extends S[], S extends string>(t: T): AutoInput<T> {\n\tlet result: BoundAutoInput<T> = lift([] as any);\n\n\tfor (let i = 0; i < t.length; ++i) {\n\t\tresult = bind(result, selected => {\n\t\t\tconst available = t.filter(v => !selected.includes(v));\n\t\t\treturn map(bindAuto(pushDefault(autoOption(available)), available[0] || \"\" as S), n => [...selected, n]);\n\t\t}) as any;\n\t}\n\n\treturn result;\n}\n\nexport function autoMultiSelect(t: string[]): AutoInput<string[]> {\n\treturn ({onChange, default: d}) => {\n\t\tconst [value, setValue] = useState(d);\n\n\t\tconst innerOnChange = useCallback((v) => {\n\t\t\tsetValue(v);\n\t\t\tonChange(v);\n\t\t}, [onChange]);\n\n\t\tconst changeBy = useCallback((e: ChangeEvent<HTMLSelectElement>) => {\n\t\t\tconst options = (e.target as HTMLSelectElement).options\n\t\t\tconst value: string[] = [];\n\t\t\tfor (let i = 0; i < options.length; ++i) {\n\t\t\t\tif(options[i].selected) value.push(options[i].value)\n\t\t\t}\n\t\t\tinnerOnChange(value);\n\t\t}, [innerOnChange, value])\n\n\t\treturn <select\n\t\t\tclassName=\"input-reset ba b--black-20 pa2 mb2 db w-100\"\n\t\t\tmultiple\n\t\t\tonChange={changeBy}>\n\t\t\t{t.map((o, i) => <option key={i} value={o} selected={value.includes(o)}>{o}</option> )}\n\t\t</select>\n\t}\n}\n","export const defaultModifier = {\n\tName: \"\", Modifier: 0,\n}\n\nexport const defaultContent = {\n\tName: \"\", Content: \"\"\n};\n\nexport type Save = typeof defaultModifier;\nexport type Skill = typeof defaultModifier;\nexport type TraitOrAction = typeof defaultContent;\n\n// (3/Day)\n// (Recharge 5-6)\n\nexport const defaultCombatRole = {\n\tacMod: 0,\n\tstMod: 0,\n\thpMult: 1,\n\tattack: 0,\n\tdcMod: 0,\n\tdmgMult: 1,\n\tspeed: 0,\n\tperceptionProfMod: 0,\n\tstealthProfMod: 0,\n\tinitProfMod: 0,\n}\n\nexport type CombatRole = typeof defaultCombatRole;\n\nexport const defaultCombatRank = {\n\tacMod: 0,\n\thpMult: 1,\n\tstMod: 0,\n\tinitProfMod: 0,\n\tattackMod: 0,\n\tdcMod: 0,\n\tdmgMult: 1,\n\txpMult: 1,\n};\n\nexport type CombatRank = typeof defaultCombatRank;\n\nexport const defaultEditMonster = {\n\tCombatLevel: 0,\n\tCombatRank: defaultCombatRank,\n\tCombatRole: defaultCombatRole,\n\tAbilities: [\"Str\", \"Dex\", \"Con\", \"Wis\", \"Int\", \"Cha\"],\n\tflags: [] as string[],\n\tWinCondition: \"\",\n\tCounterMeasure: \"\",\n}\n\nexport type EditMonster = typeof defaultEditMonster;\n\n\nexport const defaultMonster = {\n\tSource: \"dndmm\",\n\t_editing: defaultEditMonster,\n\tType: \"beast\",\n\tChallenge: \"0\",\n\tHP: {Value: 3, Notes: \"\"},\n\tAC: {Value: 10, Notes: \"\"},\n\tInitiativeModifier: 0,\n\tInitiativeAdvantage: false,\n\tSpeed: [\n\t\t\"walk 30 ft.\"\n\t],\n\tAbilities: {\n\t\t\"Str\": 10, \"Dex\": 10, \"Con\": 10, \"Int\": 10, \"Wis\": 10, \"Cha\": 10\n\t},\n\tDamageVulnerabilities: [] as string[],\n\tDamageResistances: [] as string[],\n\tDamageImmunities: [] as string[],\n\tConditionImmunities: [] as string[],\n\tSaves: [] as Save[],\n\tSkills: [] as Skill[],\n\tSenses: [] as string[],\n\tLanguages: [] as string[],\n\tTraits: [] as TraitOrAction[],\n\tActions: [] as TraitOrAction[],\n\tBonusActions: [] as TraitOrAction[],\n\tReactions: [] as TraitOrAction[],\n\tLegendaryActions: [] as TraitOrAction[],\n\tMythicActions: [] as TraitOrAction[],\n\tVersion: \"1.0\",\n\tPlayer: \"\",\n\tImageUrl: \"\",\n}\n\nexport type Monster = typeof defaultMonster;\n\n\n\nexport const defaultRankLevel = {\n\tac: 0,\n\thp: 0,\n\tattack: 0,\n\tdcs: [0, 0] as [number, number],\n\tdamage: 1,\n\tprof: 0,\n\tst: [0, 0, 0] as [number, number, number],\n\tab: [0, 0, 0, 0, 0, 0] as [number, number, number, number, number, number],\n}\n\nexport type RankLevel = typeof defaultRankLevel;\n","export class Parser<T> {\n    constructor(public f: (state: number, input: string) => [T, number]) {\n    }\n\n    run(input: string): T {\n        return this.f(0, input)[0];\n    }\n\n    withErrorMessage(message: string): Parser<T> {\n        const orig = this;\n        return new Parser((state, input) => {\n            try {\n                return orig.f(state, input);\n            } catch (e) {\n                throw new Error(message);\n            }\n        })\n    }\n\n    static nextMatching(r: RegExp): Parser<string> {\n        return new Parser((state, input) => {\n            const match: RegExpMatchArray | null = input.slice(state).match(r);\n            if (match == null || match.index != 0 || !match[0]) {\n                throw new Error(\"Expected matching \" + r.source + \" but did not find any near \" + input.slice(state));\n            }\n\n            return [match[0], state + match[0].length];\n        })\n    }\n\n    static just<T>(t: T): Parser<T> {\n        return new Parser((state) => [t, state]);\n    }\n\n    static failWith<T>(message: string): Parser<T> {\n        return new Parser(() => {\n            throw new Error(message);\n        });\n    }\n\n    alt(...others: Parser<T>[]): Parser<T> {\n        const orig = this;\n        return new Parser((state, input) => {\n            const all = [orig, ...others];\n            const errors: string[] = [];\n            for (let p of all) {\n                try {\n                    return p.f(state, input);\n                } catch (e) {\n                    errors.push((e as any).message);\n                }\n            }\n\n            throw new Error(errors.join(\" or \"));\n        });\n    }\n\n    andThen<R>(other: (t: T) => Parser<R>): Parser<R> {\n        return new Parser((state, input) => {\n            const [result, state_] = this.f(state, input);\n            return other(result).f(state_, input);\n        })\n    }\n\n    map<R>(f: (r: T) => R): Parser<R> {\n        const orig = this;\n        return new Parser((state, input) => {\n            const [result, state_] = orig.f(state, input);\n            return [f(result), state_];\n        })\n    }\n\n    static matchLiteral(s: string): Parser<string> {\n        return new Parser((state, input) => {\n            if (input.slice(state, state + s.length) === s) {\n                return [s, state + s.length];\n            }\n\n            throw new Error('Expected ' + JSON.stringify(s) + ' near ' + JSON.stringify(input.slice(state, state + 10)));\n        })\n    }\n\n    asLookahead(): Parser<T> {\n        const orig = this;\n        return new Parser((state, input) => {\n            const [result] = orig.f(state, input);\n            return [result, state];\n        });\n    }\n\n\n\tproceededBy(other: Parser<any>): Parser<T> {\n\t\tconst orig = this;\n\t\treturn new Parser((state, input) => {\n\t\t\tconst [_, state_] = other.f(state, input);\n\t\t\tconst [result, state__] = orig.f(state_, input);\n\t\t\treturn [result, state__];\n\t\t});\n\t}\n\n\n\tterminatedBy(other: Parser<any>): Parser<T> {\n\t\tconst orig = this;\n        return new Parser((state, input) => {\n            const [result, state_] = orig.f(state, input);\n            const state__ = other.f(state_, input)[1];\n            return [result, state__];\n        });\n    }\n\n    someUntil<U>(pred: Parser<U>): Parser<T[]> {\n        const orig = this;\n        return new Parser<T[]>((state, input) => {\n            const result = [];\n            while (true) {\n                try {\n                    pred.f(state, input);\n                    break;\n                } catch {\n                }\n                const [next, state_] = orig.f(state, input);\n                state = state_;\n                result.push(next);\n            }\n\n            return [result, state];\n        })\n    }\n\n    static liftFunction<I, O>(f: (i: I) => O): ApplicativeParser<I, O> {\n        return new ApplicativeParser<I, O>((state, _) => [f, state]);\n    }\n\n    static liftFunction2<I, O1, O2>(f: (i: I) => (o: O1) => O2): ApplicativeParser2<I, O1, O2> {\n        return new ApplicativeParser2<I, O1, O2>((state, _) => [f, state]);\n    }\n\n    static liftFunction3<I, O1, O2, O3>(f: (i: I) => (o: O1) => (o: O2) => O3): ApplicativeParser3<I, O1, O2, O3> {\n        return new ApplicativeParser3<I, O1, O2, O3>((state, _) => [f, state]);\n    }\n\n    static liftFunction4<I, O1, O2, O3, O4>(f: (i: I) => (o: O1) => (o: O2) => (o: O3) => O4): ApplicativeParser4<I, O1, O2, O3, O4> {\n        return new ApplicativeParser4<I, O1, O2, O3, O4>((state, _) => [f, state]);\n    }\n\n    static liftFunction5<I, O1, O2, O3, O4, O5>(f: (i: I) => (o: O1) => (o: O2) => (o: O3) => (o: O4) => O5): ApplicativeParser5<I, O1, O2, O3, O4, O5> {\n        return new ApplicativeParser5<I, O1, O2, O3, O4, O5>((state, _) => [f, state]);\n    }\n\n    static liftFunction6<I, O1, O2, O3, O4, O5, O6>(f: (i: I) => (o: O1) => (o: O2) => (o: O3) => (o: O4) => (o: O5) => O6): ApplicativeParser6<I, O1, O2, O3, O4, O5, O6> {\n        return new ApplicativeParser6<I, O1, O2, O3, O4, O5, O6>((state, _) => [f, state]);\n    }\n}\n\nexport class ApplicativeParser<I, O> extends Parser<(i: I) => O> {\n    apply(other: Parser<I>): Parser<O> {\n        const orig = this;\n        return new Parser((state, input) => {\n            const [f, state_] = orig.f(state, input);\n            const [i, state__] = other.f(state_, input);\n\n            return [f(i), state__];\n        })\n    }\n}\n\nexport class ApplicativeParser2<I, O1, O2> extends Parser<(i: I) => (o: O1) => O2> {\n    apply(other: Parser<I>): ApplicativeParser<O1, O2> {\n        const orig = this;\n        return new ApplicativeParser((state, input) => {\n            const [f, state_] = orig.f(state, input);\n            const [i, state__] = other.f(state_, input);\n\n            return [f(i), state__];\n        })\n    }\n}\n\nexport class ApplicativeParser3<I, O1, O2, O3> extends Parser<(i: I) => (o: O1) => (o: O2) => O3> {\n    apply(other: Parser<I>): ApplicativeParser2<O1, O2, O3> {\n        const orig = this;\n        return new ApplicativeParser2((state, input) => {\n            const [f, state_] = orig.f(state, input);\n            const [i, state__] = other.f(state_, input);\n\n            return [f(i), state__];\n        })\n    }\n}\n\nexport class ApplicativeParser4<I, O1, O2, O3, O4> extends Parser<(i: I) => (o: O1) => (o: O2) => (o: O3) => O4> {\n    apply(other: Parser<I>): ApplicativeParser3<O1, O2, O3, O4> {\n        const orig = this;\n        return new ApplicativeParser3((state, input) => {\n            const [f, state_] = orig.f(state, input);\n            const [i, state__] = other.f(state_, input);\n\n            return [f(i), state__];\n        })\n    }\n}\n\nexport class ApplicativeParser5<I, O1, O2, O3, O4, O5> extends Parser<(i: I) => (o: O1) => (o: O2) => (o: O3) => (o: O4) => O5> {\n    apply(other: Parser<I>): ApplicativeParser4<O1, O2, O3, O4, O5> {\n        const orig = this;\n        return new ApplicativeParser4((state, input) => {\n            const [f, state_] = orig.f(state, input);\n            const [i, state__] = other.f(state_, input);\n\n            return [f(i), state__];\n        })\n    }\n}\n\nexport class ApplicativeParser6<I, O1, O2, O3, O4, O5, O6> extends Parser<(i: I) => (o: O1) => (o: O2) => (o: O3) => (o: O4) => (o: O5) => O6> {\n    apply(other: Parser<I>): ApplicativeParser5<O1, O2, O3, O4, O5, O6> {\n        const orig = this;\n        return new ApplicativeParser5((state, input) => {\n            const [f, state_] = orig.f(state, input);\n            const [i, state__] = other.f(state_, input);\n\n            return [f(i), state__];\n        })\n    }\n}\n\nexport class ObjectBuildingParser<T extends Object> extends Parser<T> {\n\twithKey<K extends string, V>(t: K, parser: Parser<V>) {\n\t\tconst p = this.andThen(o => parser.map(v => ({...o, [t]: v})));\n\t\treturn new ObjectBuildingParser<T & {[KK in K]: V}>(p.f as any);\n\t}\n}\n\nexport class TupleBuildingParser<T extends any[]> extends Parser<T> {\n\tplus<V>(parser: Parser<V>) {\n\t\tconst p = this.andThen(o => parser.map(v => [...o, v] as [...T, V]));\n\t\treturn new TupleBuildingParser<[...T, V]>(p.f)\n\t}\n}\n\nexport const skipWhitespace = Parser.nextMatching(/\\s*/)\nexport const matchWhitespace = Parser.nextMatching(/\\s+/);\nexport const matchEof = Parser.nextMatching(/$/);\nexport const matchNumber: Parser<number> = Parser.nextMatching(/[+-]?([0-9]*[.])?[0-9]+([eE][-+]?[0-9]+)?/).map(s => parseFloat(s));\nexport const emptyObject = new ObjectBuildingParser<{}>((s) => [{}, s]);\nexport const emptyTuple = new TupleBuildingParser<[]>((s) => [[], s]);\n","import {\n\tCombatRank,\n\tCombatRole,\n\tdefaultCombatRank,\n\tdefaultCombatRole,\n\tdefaultMonster,\n\tdefaultRankLevel,\n\tEditMonster,\n\tMonster,\n\tRankLevel,\n} from \"./types\";\nimport {emptyObject, emptyTuple, matchNumber, matchWhitespace, Parser} from \"./parser\";\n\nexport const ranks: Record<'Minion' | 'Grunt' | 'Elite' | 'Paragon', CombatRank> = {\n\tMinion: {...defaultCombatRank, acMod: -2, hpMult: 0.2, stMod: -2, dmgMult: 0.75, xpMult: 0.25},\n\tGrunt: {...defaultCombatRank},\n\tElite: {\n\t\t...defaultCombatRank, acMod: 2, hpMult: 2, stMod: 2, dmgMult: 1.1, attackMod: 2, dcMod: 2, initProfMod: 1, xpMult: 2\n\t},\n\tParagon: {\n\t\t...defaultCombatRank, acMod: 2, hpMult: 4, stMod: 2, dmgMult: 1.2, attackMod: 2, dcMod: 2, initProfMod: 1, xpMult: 4\n\t},\n};\n\nexport const roles: Record<'Controller' | 'Defender' | 'Lurker' | 'Scout' | 'Striker' | 'Supporter', CombatRole> = {\n\tController: {\n\t\t...defaultCombatRole, acMod: 2, stMod: 1, dmgMult: 0.75, initProfMod: 1,\n\t}, Defender: {\n\t\t...defaultCombatRole, acMod: 4, stMod: 2, hpMult: 0.75, speed: -5,\n\t}, Lurker: {\n\t\t...defaultCombatRole,\n\t\tacMod: -4,\n\t\tstMod: -2,\n\t\thpMult: 0.75,\n\t\tattack: 3,\n\t\tdcMod: 3,\n\t\tdmgMult: 1.5,\n\t\tspeed: 5,\n\t\tstealthProfMod: 1,\n\t}, Scout: {\n\t\t...defaultCombatRole, attack: -1, dcMod: -1, dmgMult: 0.75, speed: 10, stealthProfMod: 1, perceptionProfMod: 1,\n\t}, Striker: {\n\t\t...defaultCombatRole, acMod: -2, stMod: -1, hpMult: 1.25, attack: 2, dcMod: 2, dmgMult: 1.25,\n\t}, Supporter: {\n\t\t...defaultCombatRole, hpMult: 1.5, attack: -2, dcMod: -2, initProfMod: 1,\n\t},\n}\n\nexport const conditionImmunitiesByFlag: Record<string, string[]> = {\n\tcelestial: [],\n\thardened: [],\n\tintangible: ['grappled', 'restrained'],\n\tanimated: ['blinded', 'paralyzed', 'exhaustion', 'unconscious'],\n\tundead: ['frightened', 'exhaustion', 'stunned', 'charmed', 'unconscious'],\n\tfey: ['charmed'],\n\twriggler: ['prone'],\n\tswarm: ['prone', 'exhaustion'],\n\ttoxic: ['poisoned', 'petrified']\n}\n\nexport const vulnerabilitiesByFlag: Record<string, string[]> = {\n\tcelestial: [],\n\tfey: [],\n\thardened: [],\n\tintangible: [],\n\ttoxic: [],\n\twriggler: [],\n\tundead: ['radiant'],\n\tswarm: ['thunder'],\n\tanimated: ['thunder']\n}\n\nexport const resistancesByFlag: Record<string, string[]> = {\n\tanimated: [],\n\tintangible: [],\n\tswarm: [],\n\twriggler: [],\n\thardened: ['blunt', 'piercing', 'slashing'],\n\tundead: ['cold', 'necrotic'],\n\tfey: ['psychic'],\n\tcelestial: ['radiant'],\n\ttoxic: ['poison']\n}\n\nexport const immunitiesByFlag: Record<string, string[]> = {\n\tcelestial: [],\n\tfey: [],\n\thardened: [],\n\tintangible: [],\n\tswarm: [],\n\ttoxic: [],\n\twriggler: [],\n\tundead: ['poison'],\n\tanimated: ['psychic', 'poison']\n}\n\nexport function toEditMonster(monster: Monster): EditMonster {\n\treturn monster._editing;\n}\n\nconst headNumber = matchNumber.terminatedBy(Parser.nextMatching(/, |-/));\n\nconst rankLevelParser: Parser<RankLevel> = emptyObject\n\t.withKey('ac', matchNumber.terminatedBy(matchWhitespace))\n\t.withKey('hp', matchNumber.terminatedBy(matchWhitespace))\n\t.withKey('attack', matchNumber.terminatedBy(matchWhitespace))\n\t.withKey('dcs', emptyTuple.plus(headNumber).plus(matchNumber).terminatedBy(matchWhitespace))\n\t.withKey('damage', matchNumber.terminatedBy(matchWhitespace))\n\t.withKey('prof', matchNumber.terminatedBy(matchWhitespace))\n\t.withKey('st', emptyTuple.plus(headNumber).plus(headNumber).plus(matchNumber).terminatedBy(matchWhitespace))\n\t.withKey(\n\t\t'ab',\n\t\temptyTuple.plus(headNumber).plus(headNumber).plus(headNumber).plus(headNumber).plus(headNumber).plus(matchNumber)\n\t\t\t.terminatedBy(matchWhitespace)\n\t)\n\t.proceededBy(matchNumber.terminatedBy(matchWhitespace))\n\nconst rankLevels = `0 14 16 +2 7-10 1 +1 4, 2, 0 3, 2, 1, 1, 0, -1 1/8 25\n1 14 26 +3 8-11 2 +2 5, 3, 0 3, 2, 1, 1, 0, -1 1/4 50\n2 14 29 +3 8-11 4 +2 5, 3, 0 3, 2, 1, 1, 0, -1 1/2 112\n3 14 33 +3 8-11 5 +2 5, 3, 0 3, 2, 1, 1, 0, -1 1/2 175\n4 15 36 +4 9-12 8 +2 6, 3, 1 4, 3, 2, 1, 1, 0 1 275\n5 16 60 +5 10-13 9 +3 7, 4, 1 4, 3, 2, 1, 1, 0 2 450\n6 16 64 +5 10-13 11 +3 7, 4, 1 4, 3, 2, 1, 1, 0 2 575\n7 16 68 +5 10-13 13 +3 7, 4, 1 4, 3, 2, 1, 1, 0 3 725\n8 17 71 +6 11-14 17 +3 8, 5, 1 5, 3, 2, 2, 1, 0 3 975\n9 18 102 +7 12-15 19 +4 9, 5, 2 5, 3, 2, 2, 1, 0 4 1,250\n10 18 106 +7 12-15 21 +4 9, 5, 2 5, 3, 2, 2, 1, 0 4 1,475\n11 18 111 +7 12-15 23 +4 9, 5, 2 5, 3, 2, 2, 1, 0 5 1,800\n12 18 115 +8 12-15 28 +4 10, 6, 2 6, 4, 3, 2, 1, 0 5 2,100\n13 19 152 +9 13-16 30 +5 11, 7, 2 6, 4, 3, 2, 1, 0 6 2,500\n14 19 157 +9 13-16 32 +5 11, 7, 2 6, 4, 3, 2, 1, 0 6 2,875\n15 19 162 +9 13-16 34 +5 11, 7, 2 6, 4, 3, 2, 1, 0 7 3,250\n16 20 166 +10 14-17 41 +5 12, 7, 3 7, 5, 3, 2, 2, 1 7 3,750\n17 21 210 +11 15-18 43 +6 13, 8, 3 7, 5, 3, 2, 2, 1 8 4,500\n18 21 215 +11 15-18 46 +6 13, 8, 3 7, 5, 3, 2, 2, 1 9 5,000\n19 21 221 +11 15-18 48 +6 13, 8, 3 7, 5, 3, 2, 2, 1 9 5,500\n20 22 226 +12 16-19 51 +6 14, 9, 3 8, 6, 4, 3, 2, 1 10 6,250\n21 22 276 +13 17-20 53 +7 15, 9, 4 8, 6, 4, 3, 2, 1 11 8,250\n22 22 282 +13 17-20 56 +7 15, 9, 4 8, 6, 4, 3, 2, 1 13 10,250\n23 22 288 +13 17-20 58 +7 15, 9, 4 8, 6, 4, 3, 2, 1 14 12,500\n24 23 293 +14 17-20 61 +7 16, 10, 4 9, 6, 4, 3, 2, 1 16 15,500`.split('\\n').map(line => rankLevelParser.run(line));\n\nexport function combatLevelToGruntPower(combatLevel: number): RankLevel {\n\treturn rankLevels[combatLevel] || defaultRankLevel;\n}\n\nexport function inferCombatRank(rankLevel: RankLevel, normalized: Monster) {\n\tfor (let rank of Object.values(ranks)) {\n\t\tif (Math.floor(rank.hpMult * rankLevel.hp) <= normalized.HP.Value) {\n\t\t\treturn rank;\n\t\t}\n\t}\n\n\treturn ranks.Paragon;\n}\n\nexport function expandToRankLevel(combatLevel: number, combatRank: CombatRank, combatRole: CombatRole): RankLevel {\n\tconst {hp, ac, ab, attack, damage, dcs: [dc1, dc2], st: [st1, st2, st3], prof} = combatLevelToGruntPower(combatLevel);\n\n\treturn {\n\t\thp: Math.floor(hp * combatRank.hpMult * combatRole.hpMult),\n\t\tac: ac + combatRank.acMod + combatRole.acMod,\n\t\tab,\n\t\tattack: attack + combatRank.attackMod + combatRole.attack,\n\t\tdamage: Math.floor(damage * combatRank.dmgMult * combatRole.dmgMult),\n\t\tdcs: [dc1 + combatRank.dcMod + combatRole.dcMod, dc2 + combatRank.dcMod + combatRole.dcMod],\n\t\tst: [\n\t\t\tst1 + combatRank.stMod + combatRole.stealthProfMod,\n\t\t\tst2 + combatRank.stMod + combatRole.stMod,\n\t\t\tst3 + combatRank.stMod + combatRole.stMod\n\t\t],\n\t\tprof\n\t}\n}\n\nexport function abModAsAb(mod: number) {\n\treturn 10 + mod * 2;\n}\n\nexport function abAsAbMod(ab: number) {\n\treturn Math.floor((ab - 10) / 2);\n}\n\nexport function expandEdit(editMonster: EditMonster): Monster {\n\tconst {\n\t\tCombatLevel, CombatRank, CombatRole, flags\n\t} = editMonster;\n\tconst {hp, prof, ac, ab, st, attack, dcs, damage} = expandToRankLevel(CombatLevel, CombatRank, CombatRole);\n\n\n\tconst Abilities = {...defaultMonster.Abilities};\n\tconst Saves = [...defaultMonster.Saves];\n\n\teditMonster.Abilities.forEach((ability, i) => {\n\t\tif (!(ability in Abilities)) return;\n\t\tconst nextVal = ab[i];\n\t\tif (nextVal == null) return;\n\n\t\tAbilities[ability as keyof typeof Abilities] = abModAsAb(nextVal);\n\n\t\tif (i < 1) {\n\t\t\tSaves.push({Name: ability, Modifier: st[0],})\n\t\t} else if (i < 3) {\n\t\t\tSaves.push({Name: ability, Modifier: st[1],})\n\t\t} else {\n\t\t\tSaves.push({Name: ability, Modifier: st[2],})\n\t\t}\n\t})\n\n\tconst DamageImmunities = flags.map(k => immunitiesByFlag[k] || []).flat()\n\tconst DamageResistances = flags.map(k => resistancesByFlag[k] || []).flat()\n\tconst DamageVulnerabilities = flags.map(k => vulnerabilitiesByFlag[k] || []).flat()\n\tconst ConditionImmunities = flags.map(k => conditionImmunitiesByFlag[k] || []).flat()\n\n\tconst Actions = [...defaultMonster.Actions];\n\tconst BonusActions = [...defaultMonster.BonusActions];\n\tconst Reactions = [...defaultMonster.Reactions];\n\tconst LegendaryActions = [...defaultMonster.LegendaryActions];\n\tconst Traits = [...defaultMonster.Traits];\n\n\n\tTraits.push({Name: '+', Content: editMonster.WinCondition});\n\tTraits.push({Name: '-', Content: editMonster.CounterMeasure});\n\n\tActions.push({\n\t\tName: 'Attack',\n\t\tContent: `Attack: ${attack}, DC ${dcs[0]}, Damage: ${[4, 6, 8, 12].map(sides => rollToString(toRoll(damage, sides))).join(' / ')}`,\n\t})\n\n\tActions.push({\n\t\tName: 'Power (3/Day)',\n\t\tContent: ``,\n\t})\n\n\tif (flags.includes('legendary')) {\n\t\tTraits.push({\n\t\t\tName: 'Legendary Resistance (3/Day)',\n\t\t\tContent: 'May succeed a failed saving throw.',\n\t\t})\n\n\t\tLegendaryActions.push({\n\t\t\tName: 'Move',\n\t\t\tContent: 'Make another movement (2 Actions)',\n\t\t})\n\t}\n\n\tBonusActions.push({\n\t\tName: 'Secondary Effect',\n\t\tContent: `DC ${dcs[1]}`\n\t})\n\n\tReactions.push({\n\t\tName: 'Reaction',\n\t\tContent: `Prof: ${prof}`\n\t})\n\n\treturn {\n\t\t...defaultMonster,\n\t\tHP: {Value: hp, Notes: \"\"},\n\t\tInitiativeModifier: (prof * (CombatRank.initProfMod + CombatRole.initProfMod)) + abAsAbMod(Abilities.Dex),\n\t\tSaves: Saves,\n\t\tAC: {Value: ac, Notes: \"\"},\n\t\tSenses: [`passive Perception ${10 + abAsAbMod(Abilities.Wis) + prof * CombatRole.perceptionProfMod}`],\n\t\tSkills: [\n\t\t\t{\n\t\t\t\tName: 'Stealth', Modifier: abAsAbMod(Abilities.Dex) + prof * CombatRole.stealthProfMod\n\t\t\t}\n\t\t],\n\t\tSpeed: [`move +${CombatRole.speed} ft`],\n\t\tAbilities,\n\t\tDamageImmunities,\n\t\tDamageResistances,\n\t\tDamageVulnerabilities,\n\t\tConditionImmunities,\n\t\tTraits,\n\t\tActions,\n\t\tBonusActions,\n\t\tReactions,\n\t\tLegendaryActions,\n\t\t_editing: editMonster,\n\t}\n}\n\nexport type Roll = { sides: number, dice: number, mod: number };\n\nexport function rollToString({sides, dice, mod}: Roll): string {\n\tconst mult = sides / 2 + 0.5;\n\tif (sides < 1 || dice < 1) {\n\t\treturn (mult * sides).toString();\n\t}\n\n\tif (mod > 0) {\n\t\treturn `${dice}d${sides}+${mod}`\n\t}\n\n\tif (mod < 0) {\n\t\treturn `${dice}d${sides}${mod}`\n\t}\n\n\treturn `${dice}d${sides}`\n}\n\nexport function toRoll(i: number, sides: number = 6): Roll {\n\tconst mult = sides / 2 + 0.5;\n\tlet dice = Math.floor(i / mult);\n\n\tif (!dice) {\n\t\tdice += 1;\n\t\ti -= mult;\n\t}\n\n\tconst mod = Math.floor(i % mult);\n\treturn {dice, mod, sides};\n}\n","import React, {useMemo} from 'react';\nimport {\n\tautoMultiSelect,\n\tAutoNumber,\n\tautoOption,\n\tautoOrder,\n\tAutoString,\n\tlabeled, noop,\n\tobjectFrom,\n\tpassThrough,\n\ttranslate,\n\tuseTap\n} from \"./autoform\";\nimport {\n\tconditionImmunitiesByFlag, expandEdit,\n\timmunitiesByFlag,\n\tranks,\n\tresistancesByFlag,\n\troles,\n\tvulnerabilitiesByFlag\n} from \"./editing\";\nimport {defaultEditMonster} from \"./types\";\n\nfunction App() {\n\tconst [EditMonster, editMonster] = useTap(useMemo(() => {\n\t\treturn objectFrom(defaultEditMonster, {\n\t\t\t...passThrough(defaultEditMonster),\n\t\t\tCombatLevel: labeled(\"Level\", AutoNumber),\n\t\t\tCombatRank: labeled(\n\t\t\t\t\"Rank\",\n\t\t\t\ttranslate(autoOption(Object.keys(ranks) as (keyof typeof ranks)[]),\n\t\t\t\t\tk => ranks[k as keyof typeof ranks],\n\t\t\t\t\trank => Object.keys(ranks).find(k => ((ranks as any)[k] === rank)) as any || 'Grunt'\n\t\t\t\t)\n\t\t\t),\n\t\t\tCombatRole: labeled(\n\t\t\t\t\"Role\",\n\t\t\t\ttranslate(autoOption(Object.keys(roles) as (keyof typeof roles)[]),\n\t\t\t\t\tk => roles[k as keyof typeof roles],\n\t\t\t\t\trole => Object.keys(roles).find(k => ((roles as any)[k] === role)) as any || 'Controller'\n\t\t\t\t)\n\t\t\t),\n\t\t\tAbilities: labeled(\"Abilities\", autoOrder(defaultEditMonster.Abilities)),\n\t\t\tWinCondition: labeled('Win Condition', AutoString),\n\t\t\tCounterMeasure: labeled('Counter Measure', AutoString),\n\t\t\tflags: labeled(\"Flags\", autoMultiSelect([\n\t\t\t\t...Object.keys({...immunitiesByFlag, ...vulnerabilitiesByFlag, ...conditionImmunitiesByFlag, ...resistancesByFlag}),\n\t\t\t\t'legendary'\n\t\t\t])),\n\t\t})\n\t}, [defaultEditMonster]), defaultEditMonster);\n\n\tconst monster = useMemo(() => expandEdit(editMonster), [editMonster]);\n\tconst baseData = useMemo(() => (\n\t\t{\n\t\t\tHP: monster.HP.Value + \" \" + monster.HP.Notes,\n\t\t\tAC: monster.AC.Value + \" \" + monster.AC.Notes,\n\t\t\tInit: monster.InitiativeModifier,\n\t\t\tPer: monster.Senses.join(', '),\n\t\t\tSkls: monster.Skills.map(({Name, Modifier}) => `${Name}: ${Modifier}`).join(', '),\n\t\t\tST: monster.Saves.map(({Name, Modifier}) => `${Name}: ${Modifier}`).join(', '),\n\t\t\tImm: [...new Set<string>([...monster.DamageImmunities, ...monster.ConditionImmunities]).values()].join(', '),\n\t\t\tRes: [...new Set(monster.DamageResistances).values()].join(', '),\n\t\t\tVuln: [...new Set(monster.DamageVulnerabilities).values()].join(', '),\n\t\t}\n\t), [monster]);\n\n\treturn (\n    <div className=\"mw7 center pa4\">\n\t\t<EditMonster onChange={noop} />\n\n\t\t<div>\n\t\t\t<textarea value={JSON.stringify(monster, null, 2)} className=\"input-reset w-100\" rows={4}/>\n\t\t</div>\n\t\t<div>\n\t\t\tHP {baseData.HP} AC: {baseData.AC} Init: {baseData.Init} {baseData.Per}\n\t\t</div>\n\t\t<div>\n\t\t\t{baseData.Skls} Imm: {baseData.Imm} Res: {baseData.Res} Vuln: {baseData.Vuln}\n\t\t</div>\n\n\t\t<div>\n\t\t\t<h3>Traits</h3>\n\t\t\t<ul>\n\t\t\t\t{monster.Traits.map(({Name, Content}) => <li>\n\t\t\t\t\t<b>{Name}</b> {Content}\n\t\t\t\t</li>)}\n\t\t\t</ul>\n\t\t</div>\n\n\t\t<div>\n\t\t\t<h3>Actions</h3>\n\t\t\t<ul>\n\t\t\t\t{monster.Actions.map(({Name, Content}) => <li>\n\t\t\t\t\t<b>{Name}</b> {Content}\n\t\t\t\t</li>)}\n\t\t\t</ul>\n\t\t</div>\n\n\t\t<div>\n\t\t\t<h3>Bonus Actions</h3>\n\t\t\t<ul>\n\t\t\t\t{monster.BonusActions.map(({Name, Content}) => <li>\n\t\t\t\t\t<b>{Name}</b> {Content}\n\t\t\t\t</li>)}\n\t\t\t</ul>\n\t\t</div>\n\n\t\t<div>\n\t\t\t<h3>Reactions</h3>\n\t\t\t<ul>\n\t\t\t\t{monster.Reactions.map(({Name, Content}) => <li>\n\t\t\t\t\t<b>{Name}</b> {Content}\n\t\t\t\t</li>)}\n\t\t\t</ul>\n\t\t</div>\n\n\t\t<div>\n\t\t\t<h3>Legendary Actions</h3>\n\t\t\t<ul>\n\t\t\t\t{monster.LegendaryActions.map(({Name, Content}) => <li>\n\t\t\t\t\t<b>{Name}</b> {Content}\n\t\t\t\t</li>)}\n\t\t\t</ul>\n\t\t</div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}